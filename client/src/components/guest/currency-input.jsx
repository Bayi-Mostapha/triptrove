import { useForm } from "react-hook-form"
import { Button } from "@/components/ui/button"
import {
    Form,
    FormControl,
    FormField,
    FormItem,
    FormLabel,
    FormMessage,
} from "@/components/ui/form"
import {
    Select,
    SelectContent,
    SelectItem,
    SelectTrigger,
    SelectValue,
} from "@/components/ui/select"
import { useContext } from "react"
import { ExchangeRateContext } from "@/contexts/exchangeRatesWrapper"

export default function CurrencyInput() {
    const form = useForm()
    const { setSelectedCurrency } = useContext(ExchangeRateContext)
    const currencies = [
        { emoji: 'ðŸ‡ºðŸ‡¸', name: 'US Dollar', value: 'usd' },
        { emoji: 'ðŸ‡²ðŸ‡¦', name: 'Moroccan Dirham', value: 'mad' },
        { emoji: 'ðŸ‡ªðŸ‡º', name: 'Euro', value: 'eur' },
        { emoji: 'ðŸ‡¬ðŸ‡§', name: 'British Pound', value: 'gbp' },
        { emoji: 'ðŸ‡¯ðŸ‡µ', name: 'Japanese Yen', value: 'jpy' },
        { emoji: 'ðŸ‡¨ðŸ‡¦', name: 'Canadian Dollar', value: 'cad' },
        { emoji: 'ðŸ‡¦ðŸ‡º', name: 'Australian Dollar', value: 'aud' },
        { emoji: 'ðŸ‡¨ðŸ‡³', name: 'Chinese Yuan', value: 'cny' },
        { emoji: 'ðŸ‡¨ðŸ‡­', name: 'Swiss Franc', value: 'chf' },
        { emoji: 'ðŸ‡®ðŸ‡³', name: 'Indian Rupee', value: 'inr' },
        { emoji: 'ðŸ‡§ðŸ‡·', name: 'Brazilian Real', value: 'brl' },
        { emoji: 'ðŸ‡·ðŸ‡º', name: 'Russian Ruble', value: 'rub' },
        { emoji: 'ðŸ‡²ðŸ‡½', name: 'Mexican Peso', value: 'mxn' },
        { emoji: 'ðŸ‡¿ðŸ‡¦', name: 'South African Rand', value: 'zar' },
        { emoji: 'ðŸ‡¸ðŸ‡¬', name: 'Singapore Dollar', value: 'sgd' },
        { emoji: 'ðŸ‡­ðŸ‡°', name: 'Hong Kong Dollar', value: 'hkd' },
        { emoji: 'ðŸ‡°ðŸ‡·', name: 'South Korean Won', value: 'krw' },
        { emoji: 'ðŸ‡¸ðŸ‡¦', name: 'Saudi Riyal', value: 'sar' },
        { emoji: 'ðŸ‡¦ðŸ‡ª', name: 'United Arab Emirates Dirham', value: 'aed' },
        { emoji: 'ðŸ‡³ðŸ‡´', name: 'Norwegian Krone', value: 'nok' },
        { emoji: 'ðŸ‡¸ðŸ‡ª', name: 'Swedish Krona', value: 'sek' },
        { emoji: 'ðŸ‡©ðŸ‡°', name: 'Danish Krone', value: 'dkk' },
        { emoji: 'ðŸ‡³ðŸ‡¿', name: 'New Zealand Dollar', value: 'nzd' },
        { emoji: 'ðŸ‡¹ðŸ‡·', name: 'Turkish Lira', value: 'try' },
        { emoji: 'ðŸ‡¹ðŸ‡­', name: 'Thai Baht', value: 'thb' },
        { emoji: 'ðŸ‡®ðŸ‡©', name: 'Indonesian Rupiah', value: 'idr' },
        { emoji: 'ðŸ‡µðŸ‡­', name: 'Philippine Peso', value: 'php' },
        { emoji: 'ðŸ‡»ðŸ‡³', name: 'Vietnamese Dong', value: 'vnd' },
        { emoji: 'ðŸ‡¦ðŸ‡·', name: 'Argentine Peso', value: 'ars' },
        { emoji: 'ðŸ‡µðŸ‡°', name: 'Pakistani Rupee', value: 'pkr' },
        { emoji: 'ðŸ‡§ðŸ‡©', name: 'Bangladeshi Taka', value: 'bdt' },
    ];

    function handleChange(data) {
        setSelectedCurrency(data.toUpperCase())
    }

    return (
        <Form {...form}>
            <form className="mt-4 block w-full px-5">
                <FormField
                    control={form.control}
                    name="email"
                    render={({ field }) => (
                        <FormItem>
                            <Select
                                className="py-2 pl-5"
                                onValueChange={(e) => {
                                    field.onChange(e)
                                    handleChange(e)
                                }}
                                defaultValue={field.value}
                            >
                                <FormControl>
                                    <SelectTrigger>
                                        <SelectValue placeholder="Select a currency" />
                                    </SelectTrigger>
                                </FormControl>
                                <SelectContent>
                                    {
                                        currencies.map(currency =>
                                            <SelectItem value={currency.value}>{currency.emoji} {currency.name}</SelectItem>
                                        )
                                    }
                                </SelectContent>
                            </Select>
                            <FormMessage />
                        </FormItem>
                    )}
                />
            </form>
        </Form>
    )
}
